#####
# Shell
set -g default-shell $SHELL
set -g default-terminal "screen-256color"

#####
# Prefix is Ctrl-a
set -g prefix C-a
bind C-a send-prefix
unbind C-b

#####
# Misc
set -sg escape-time 1
set -g base-index 1
setw -g pane-base-index 1
set -g history-limit 10000

#####
# Mouse
setw -g mode-mouse on
setw -g utf8 on
set -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on
setw -g monitor-activity on
set -g visual-activity on

#####
# VIM
set -g mode-keys vi
# y and p as in vim
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
bind -t vi-copy 'Space' halfpage-down
bind -t vi-copy 'Bspace' halfpage-up
# extra commands for interacting with the ICCCM clipboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

#####
# Windows
# Moving
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# Moving
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# Split
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %
# Resize
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# Switch
bind -n M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n M-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"


#####
# Powerline
run-shell "powerline-daemon -q"

# From https://github.com/Lokaltog/powerline/develop/powerline/bindings/tmux/powerline.conf
set-environment -g POWERLINE_CONFIG_COMMAND powerline-config
set-environment -g POWERLINE_COMMAND powerline

# Don’t version-check for this core functionality -- anything too old to
# support these options likely won’t work well with powerline
set -g status on
set -g status-utf8 on
set -g status-interval 2
set -g window-status-format "#[fg=colour244,bg=colour234]  #I #[fg=colour240] #[default]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"

set -g status-right '#(eval $POWERLINE_COMMAND tmux right -R pane_id=`tmux display -p "#D"`)'
set -g status-right-length 150

# Legacy status-left definition to be overwritten for tmux Versions 1.8+
set -g status-left-length 20
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]#(eval $POWERLINE_COMMAND tmux left)'

# From powerline tmux source
set -g status-fg colour231
set -g status-bg colour234
set -g window-status-fg colour249
set -g window-status-activity-attr none
set -g window-status-bell-attr none
set -g window-status-activity-fg yellow
set -g window-status-bell-fg red
set -s escape-time 0

